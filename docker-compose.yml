# Base services used both in development and production

version: "3.9"

services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
      # - ./storage/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - 5051:5432
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Postgres password}
      POSTGRES_USER: ${POSTGRES_USER?Postgres username}
      POSTGRES_DB: ${POSTGRES_DB?Postgres DB name}
      # # Variables for the init script.
      # POSTGREST_USER: ${POSTGREST_USER?PostgREST authenticator username}
      # POSTGREST_PASSWORD: ${POSTGREST_PASSWORD?PostgREST authenticator password}
      # POSTGREST_ANON_ROLE: ${POSTGREST_ANON_ROLE?PostgREST anon role}
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 15s
      timeout: 2s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - backend
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL?PgAdmin email}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD?PgAdmin password}

  api:
    image: postgrest/postgrest:latest
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - backend
    ports:
      - 5052:3000
    environment:
      PGRST_DB_URI: postgres://${POSTGREST_USER?}:${POSTGREST_PASSWORD?}@postgres:5432/${POSTGRES_DB?}
      PGRST_DB_SCHEMA: ${POSTGREST_SCHEMA?}
      PGRST_DB_ANON_ROLE: ${POSTGREST_ANON_ROLE?}
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:5052
      # Limit the maximum row count in all responses, 1500 being a little bit
      # more than what's required to read all defects in one go.
      PGRST_DB_MAX_ROWS: 1500

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - 5053:8080
    networks:
      - backend
    environment:
      API_URL: http://127.0.0.1:5052/

volumes:
  postgres:
  pgadmin:


networks:
  backend:
